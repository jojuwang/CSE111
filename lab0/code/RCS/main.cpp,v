head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2018.06.20.00.36.22;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.06.20.00.33.05;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.01.06.00.30.26;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.01.06.00.29.29;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.01.05.22.33.39;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: main.cpp,v 1.4 2018-06-19 17:33:05-07 - - $

#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
using namespace std;

#include <libgen.h>

#include "hello.h"

int main (int argc, char** argv) {
   string execname {basename (argv[0])};
   vector<string> args (&argv[1], &argv[argc]);
   cout << "Execname: " << execname << ", Compiled: "
        << __DATE__ << " " << __TIME__ << endl;
   cout << "This is: " << __FILE__ << "[" << __LINE__ << "]: "
        << __PRETTY_FUNCTION__ << endl;
   auto hello_ptr = make_shared<hello>();
   hello_ptr->say (cout);
   hello goodbye {"Goodbye, world!"};
   goodbye.say (cout);
   hello second {*hello_ptr};
   second.say (cout);
   for (const auto& arg: args) cout << "for: " << arg << endl;
   for_each (args.cbegin(), args.cend(),
             [](auto& arg) { cout << "for_each: " << arg << endl; });
   return EXIT_SUCCESS;
}

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.3 2018-01-05 16:30:26-08 - - $
d18 2
a19 2
   cout << execname << endl;
   cout << "Compiled: " << __DATE__ << " " << __TIME__ << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.2 2018-01-05 16:29:29-08 - - $
d19 3
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.1 2018-01-05 14:33:39-08 - - $
d27 1
a27 1
             [] (auto& arg) { cout << "for_each: " << arg << endl; });
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.1 2017-06-14 16:42:35-07 - - $
d26 2
a27 4
   for_each (&argv[0], &argv[argc],
             [=] (const char* arg) {
                cout << "for_each: " << arg << endl;
             });
@
