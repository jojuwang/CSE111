==19243== Memcheck, a memory error detector
==19243== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19243== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==19243== Command: ../yshell
==19243== 
yshell: Bad: no such function
yshell: #: no such function
yshell: #: no such function
yshell: #: no such function
==19243== 
==19243== HEAP SUMMARY:
==19243==     in use at exit: 293 bytes in 6 blocks
==19243==   total heap usage: 214 allocs, 208 frees, 7,675 bytes allocated
==19243== 
==19243== 293 (56 direct, 237 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 6
==19243==    at 0x4C2A483: operator new(unsigned long) (vg_replace_malloc.c:344)
==19243==    by 0x410727: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==19243==    by 0x410142: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==19243==    by 0x40F609: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==19243==    by 0x40EB04: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:675)
==19243==    by 0x40DA35: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==19243==    by 0x40C7E4: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:359)
==19243==    by 0x40B8E6: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:706)
==19243==    by 0x40AA3A: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:722)
==19243==    by 0x4092B9: inode_state::inode_state() (file_sys.cpp:29)
==19243==    by 0x413423: main (main.cpp:50)
==19243== 
==19243== LEAK SUMMARY:
==19243==    definitely lost: 56 bytes in 1 blocks
==19243==    indirectly lost: 237 bytes in 5 blocks
==19243==      possibly lost: 0 bytes in 0 blocks
==19243==    still reachable: 0 bytes in 0 blocks
==19243==         suppressed: 0 bytes in 0 blocks
==19243== 
==19243== For counts of detected and suppressed errors, rerun with: -v
==19243== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
